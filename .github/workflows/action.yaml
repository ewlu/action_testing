name: Test

on:
  push

jobs:
  build-issue:
    runs-on: ubuntu-20.04
    permissions:
      issues: write
    steps:
      - name: Create build pending issue
        run: |
          echo "Associated run: init" > issue.md
          

      - name: Create build report issue
        uses: peter-evans/create-issue-from-file@v4
        id: create-issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          content-filepath: issue.md
          title: 'Test Status 1'

      - name: check new issue number
        id: issue
        run: |
          export ISSUE_NUMBER=${{ steps.create-issue.outputs.issue-number }}
          echo $ISSUE_NUMBER
          echo "issue_num=$ISSUE_NUMBER" >> $GITHUB_OUTPUT

    outputs:
      issue_num: ${{ steps.issue.outputs.issue_num }} 

  creg: # Check Regressions. Short name so I can see the matrix string in github
    needs: [build-issue]
    strategy:
      fail-fast: false
      matrix:
        mode: [linux]
        target:
          [
            rv32gc_zba_zbb_zbc_zbs-ilp32d,
            rv64gc_zba_zbb_zbc_zbs-lp64d
          ]
        multilib: [non-multilib]
    uses: ./.github/workflows/matrix.yaml
    with:
      mode: ${{ matrix.mode }}
      target: ${{ matrix.target }}
      multilib: ${{ matrix.multilib }}
      issue_num: ${{ needs.build-issue.outputs.issue_num }} 

  csreg: # Check Regressions. Short name so I can see the matrix string in github
    needs: [build-issue]
    strategy:
      fail-fast: false
      matrix:
        mode: [newlib]
        target:
          [
            rv32gc-ilp32d,
            rv64gc-lp64d
          ]
        multilib: [multilib]
    uses: ./.github/workflows/matrix.yaml
    with:
      mode: ${{ matrix.mode }}
      target: ${{ matrix.target }}
      multilib: ${{ matrix.multilib }}
      issue_num: ${{ needs.build-issue.outputs.issue_num }} 

  chreg: # Check Regressions. Short name so I can see the matrix string in github
    needs: [build-issue]
    strategy:
      fail-fast: false
      matrix:
        mode: [linux]
        target:
          [
            rv32gcv-ilp32d,
            rv64gcv-lp64d
          ]
        multilib: [multilib]
    uses: ./.github/workflows/matrix.yaml
    with:
      mode: ${{ matrix.mode }}
      target: ${{ matrix.target }}
      multilib: ${{ matrix.multilib }}
      issue_num: ${{ needs.build-issue.outputs.issue_num }} 
