name: Test

on:
  push

jobs:
  build-issue:
    runs-on: ubuntu-20.04
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v3

      - name: echo arch info
        id: test
        run: |
          echo $(arch)
          sudo apt install qemu-user-static -y
          echo "something=rv32gcv-ilp32d" >> $GITHUB_OUTPUT

      - name: test
        run: |
          if [[ ${{ steps.test.outputs.something }} = rv32* ]];
          then
            echo "hi"
          else
            echo "bye"
          fi
          
      - name: test
        run: |
          if [[ ${{ steps.test.outputs.something }} = rv64* ]];
          then
            echo "hi"
          else
            echo "bye"
          fi

      # - name: echo arch info
      #   run: |
      #     cd dockerfile
      #     docker system prune -a -f
      #     docker build --no-cache --platform=linux/amd64/v3 . -t tester:latest
      #   continue-on-error: true

      # - name: echo arch info
      #   run: |
      #     cd dockerfile
      #     docker system prune -a -f
      #     docker build --no-cache --platform=linux/riscv64 . -t tester:latest
      #   continue-on-error: true

      # - name: echo arch info
      #   run: |
      #     cd dockerfile
      #     docker system prune -a -f
      #     docker build --no-cache . -t tester:latest
      #   continue-on-error: true
        
      # - name: echo arch info
      #   run: |
      #     cd dockerfile
      #     docker image inspect tester:latest
      
      # - name: Build linux
      #   id: some-id
      #   run: |
      #     echo "list=[\"build-glibc-linux-rv64gcv\",\"build-glibc-linux-rv32gcv\"]" >> $GITHUB_OUTPUT
    # outputs:
      # list: ${{ steps.some-id.outputs.list }}
          
  # run-matrix: 
    # needs: [ build-issue ]
    # uses: ./.github/workflows/matrix.yaml
    # strategy:
      # fail-fast: false
      # matrix: 
      #   target:
      #     ${{ fromJson(needs.build-issue.outputs.list) }}
    # with:
      # target: ${{ matrix.target }}
          
