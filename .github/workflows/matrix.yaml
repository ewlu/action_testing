name: Matrix

on:
  workflow_call:
    inputs:
      mode:
        required: true
        type: string
      target:
        required: true
        type: string
      multilib:
        required: true
        type: string
      issue_num:
        required: true
        type: string
      self_hosted:
        required: true
        type: string

jobs:
  build:
    if: ${{ inputs.self_hosted == 'false' }}
    runs-on: ubuntu-20.04
    environment: production
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v3

      - name: sleep
        run: |
          sleep $((RANDOM % 10))

      - name: Update pending issue
        run: |
          python scripts/update_issue_status.py -token ${{ secrets.GITHUB_TOKEN }} -state pending -patch first -target ${{ inputs.mode }}-${{ inputs.target }}-${{ inputs.multilib }} -check 'Test' -repo ewlu/action_testing
          echo "Associated run: not init" >> issue.md

      - name: Create build report issue
        uses: peter-evans/create-issue-from-file@v4
        id: create-issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          content-filepath: issue.md
          title: 'Test Status 1'
          issue-number: ${{ inputs.issue_num }}

      - name: sleep
        run: |
          sleep 60

      - name: Update pending issue
        run: |
          python scripts/update_issue_status.py -token ${{ secrets.GITHUB_TOKEN }} -state passed -patch first -target ${{ inputs.mode }}-${{ inputs.target }} -check 'Test' -repo ewlu/action_testing
          echo "Associated run: not init" >> issue.md

      - name: Create build report issue
        uses: peter-evans/create-issue-from-file@v4
        id: update-issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          content-filepath: issue.md
          title: 'Test Status 1'
          issue-number: ${{ inputs.issue_num }}
  build-sh:
    if: ${{ inputs.self_hosted == 'true' }}
    runs-on: ubuntu-20.04
    environment: production
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v3

      - name: sleep
        run: |
          sleep $((RANDOM % 10))

      - name: Update pending issue
        run: |
          python scripts/update_issue_status.py -token ${{ secrets.GITHUB_TOKEN }} -state pending -patch first -target ${{ inputs.mode }}-${{ inputs.target }}-${{ inputs.multilib }} -check 'Test' -repo ewlu/action_testing
          echo "Associated run: not init" >> issue.md

      - name: Create build report issue
        uses: peter-evans/create-issue-from-file@v4
        id: create-issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          content-filepath: issue.md
          title: 'Test Status 1'
          issue-number: ${{ inputs.issue_num }}

      - name: sleep
        run: |
          sleep 60

      - name: Update pending issue
        run: |
          python scripts/update_issue_status.py -token ${{ secrets.GITHUB_TOKEN }} -state passed -patch first -target ${{ inputs.mode }}-${{ inputs.target }} -check 'Test' -repo ewlu/action_testing
          echo "Associated run: not init" >> issue.md

      - name: Create build report issue
        uses: peter-evans/create-issue-from-file@v4
        id: update-issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          content-filepath: issue.md
          title: 'Test Status 1'
          issue-number: ${{ inputs.issue_num }}
